# SRS 配置文件 - 在线影院直播系统
# 适用于 SRS 5.0+

listen              1935;           # RTMP 推流端口
max_connections     1000;
daemon              off;
srs_log_tank        console;

# HTTP API 配置
http_api {
    enabled         on;
    listen          1985;
}

# HTTP 服务器配置
http_server {
    enabled         on;
    listen          8080;           # HTTP-FLV/HLS 拉流端口
    dir             ./objs/nginx/html;
}

# 统计信息
stats {
    network         0;
    disk            sda vda xvda xvdb;
}

# 虚拟主机配置
vhost __defaultVhost__ {
    # 启用 HTTP-FLV
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
    
    # 启用 HLS
    hls {
        enabled         on;
        hls_path        ./objs/nginx/html;
        hls_fragment    3;          # 每个切片3秒
        hls_window      20;         # 保留20个切片
        hls_cleanup     on;
        hls_dispose     0;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }
    
    # DVR 录制（可选）
    dvr {
        enabled         off;        # 需要录制时设置为 on
        dvr_path        ./objs/nginx/html/[app]/[stream].[timestamp].flv;
        dvr_plan        session;
        dvr_duration    30;
        dvr_wait_keyframe   on;
    }
    
    # 转码配置（可选）
    transcode {
        enabled     off;            # 需要转码时设置为 on
        ffmpeg      ./objs/ffmpeg/bin/ffmpeg;
        
        engine cinema {
            enabled         off;
            vcodec          copy;   # 不转码视频
            acodec          copy;   # 不转码音频
            output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
    
    # 集群配置（多服务器部署时使用）
    cluster {
        mode            local;
        origin_cluster  off;
    }
    
    # 安全配置
    security {
        srs_auto_play_filter off;
        srs_auto_publish_filter off;
    }
    
    # GOP 缓存，减少首屏等待时间
    gop_cache       on;
    queue_length    10;
    
    # 低延迟配置
    min_latency     on;
    
    # TCP 无延迟
    tcp_nodelay     on;
}

